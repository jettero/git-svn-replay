#!/usr/bin/perl
# vi:tw=0:
# $Id: git_replay 54.1136.T7mqFgUDFRlT7Rqk+2x3rXdamNs 2007-06-11 07:24:41 -0400 $

use strict;
use DBI;
use DBM::Deep;
use Term::GentooFunctions qw(:all);

die "$0 gitrepo svnco replaydb" unless @ARGV == 3;

my $gitrepo = shift @ARGV;
my $svnco   = shift @ARGV;
my $dbfile  = shift @ARGV;

my $dbm = new DBM::Deep($dbfile);

if( not -d "$svnco/.git/" ) {
    local $ENV{GIT_DIR} = "$svnco/.git";

    ebegin "cloning $gitrepo";
    system(qw(git clone --bare), $gitrepo, $ENV{GIT_DIR}) == 0 or die;
    system(qw(cg branch-add origin), $gitrepo) == 0 or die; # needs the GIT_DIR
    eend 1;
}

chdir $svnco or die "couldn't chdir into svnco($svnco): $!";
ebegin "pulling updates from $gitrepo";
system(qw(cg update)) == 0 or die;
eend 1;

open my $in, "git rev-list --all --parents | tac |" or die "error with revlist popen(): $!";
while(<$in>) {
    my ($commit, $parent) = split /\s+/;

    next if $dbm->{already_replayed}{$commit};

    $dbm->{already_replayed}{$commit} = 1 if
    &replay($commit, $parent) and &inform_svn;
}
close $in;

sub replay {
    my ($commit, $parent) = @_;

    # ebegin "replaying $commit";
    # eend 0;

    return 0;
}

sub inform_svn {
    return 0;
}
