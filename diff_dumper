#!/usr/bin/perl
# vi:tw=0:
# $Id: diffdumper 53.1432.WEQoCvaJjOm9L025XSAkwnGDyvA 2007-06-10 17:01:18 -0400 $

use strict;
use Term::GentooFunctions qw(:all);

my $git_dir  = shift @ARGV;
my $dump_dir = shift @ARGV;
   $dump_dir = "$1.diffs" if not $dump_dir and $git_dir =~ m/\/([^\/]+)\/?$/;

die "git_dir=$git_dir doesn't seem to exist" unless -d $git_dir; $ENV{GIT_DIR} = $git_dir;
die "no dump_dir (git_dir=$git_dir)" unless $dump_dir;

if( -d $dump_dir ) {
    unlink $_ for <$dump_dir/*.patch>;
    unlink $_ for <$dump_dir/*.log>;
}

mkdir $dump_dir;
chdir $dump_dir or die "couldn't move into the dump_dir: $!";

my @commits = &read_commits;
for my $commit (@commits) {
    my ($sig, $parent) = @$commit;

    ebegin "dumping $sig";

    our $counter ++;
    my $x = sprintf("%04d", $counter);

    open my $out, ">", "$x.$sig.patch" or die "couldn't open patchfile: $!";
    open my $in, "-|", qw(git diff), $parent, $sig or die "couldn't open git diff dumper: $!";
    print $out $_ while <$in>;
    close $in;
    close $out;

    open my $out, ">", "$x.$sig.log" or die "couldn't open logfile: $!";
    open my $in, "-|", qw(cg log -r), "$parent..$sig" or die "couldn't open commit log: $!";
    print $out $_ while <$in>;
    close $in;
    close $out;

    eend 1;
}

sub read_commits {
    open my $in, "-|", qw(git rev-list --all --parents) or die "coulnd't open git rev list: $!";
    my @commits = grep {@$_==2} map {[ m/(\S+)\s+(\S+)/ ]} reverse <$in>;
    close $in;

    return @commits;
}
